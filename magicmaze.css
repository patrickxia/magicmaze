/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * MagicMaze implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * magicmaze.css
 *
 * MagicMaze stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (magicmaze_magicmaze.tpl), and to HTML elements you create dynamically
    (in magicmaze.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/

#timer {
  position: fixed;
  left: 0px;
  top: 5em;
  background: #fff;
  z-index: 1;
}

#area_container {
  position: relative;
  width: 100%;
  height: 1024px;
  overflow:hidden;
}

#area_scrollable, #area_scrollable_oversurface {
  position: absolute;
  top: 205px;
  left: 315px;
}

#area_surface {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  cursor: move;
}

#movetop,#moveleft,#moveright,#movedown {
    display: block;
    position: absolute;
    background-image: url('../../../img/common/arrows.png');
    width: 32px;
    height: 32px;
}

#movetop {
    top: 0px;
    left: 50%;
    background-position: 0px 32px;
}
#moveleft {
    top: 50%;
    left: 0px;
    background-position: 32px 0px;
}
#moveright {
    top: 50%;
    right: 0px;
    background-position: 0px 0px;
}
#movedown {
    bottom: 0px;
    left: 50%;
    background-position: 32px 32px;
}

.debug {
  background-color: #00b;
  opacity: .3;
  border-style: solid;
  border-width: 1px;
}
.tile1 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -0px 0;
}
.tile2 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -256px 0;
}
.tile3 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -512px 0;
}
.tile4 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -768px 0;
}
.tile5 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -1024px 0;
}
.tile6 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -1280px 0;
}
.tile7 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -1536px 0;
}
.tile8 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -1792px 0;
}
.tile9 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -2048px 0;
}
.tile10 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -2304px 0;
}
.tile11 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -2560px 0;
}
.tile12 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -2816px 0;
}
.tile13 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -3072px 0;
}
.tile14 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -3328px 0;
}
.tile15 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -3584px 0;
}
.tile16 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -3840px 0;
}
.tile17 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -4096px 0;
}
.tile18 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -4352px 0;
}
.tile19 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -4608px 0;
}
.tile20 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -4864px 0;
}
.tile21 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -5120px 0;
}
.tile22 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -5376px 0;
}
.tile23 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -5632px 0;
}
.tile24 {
  width: 256px;
  height: 256px;
  background: url('img/t.png') -5888px 0;
}

#token0 {
  width: 30px;
  height: 30px;
  background: url('img/30_30_meeple.png') -30px 0;
  position: absolute;
}

#token1 {
  width: 30px;
  height: 30px;
  background: url('img/30_30_meeple.png') -90px 0;
  position: absolute;
}

#token2 {
  width: 30px;
  height: 30px;
  background: url('img/30_30_meeple.png') -210px 0;
  position: absolute;
}

#token3 {
  width: 30px;
  height: 30px;
  background: url('img/30_30_meeple.png') -270px 0;
  position: absolute;
}

.redpawn {
  width: 30px;
  height: 30px;
  background: url('img/30_30_meeple.png') -180px 0;
  display: inline-block;
}

.abilityN {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') 0px 0;
  display: inline-block;
}

.abilityS {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') -30px 0;
  display: inline-block;
}

.abilityW {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') -60px 0;
  display: inline-block;
}

.abilityE {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') -90px 0;
  display: inline-block;
}

.abilityP {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') -120px 0;
  display: inline-block;
}

.abilityR {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') -150px 0;
  display: inline-block;
}

.abilityH {
  width: 30px;
  height: 24px;
  background: url('img/dirs.png') -180px 0;
  display: inline-block;
}

.used {
  position: absolute;
  width: 55px;
  height: 55px;
  /* TODO: get an image here */
  background: #000;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

#border {
  /* bgg tries to interfere with this as much as possible. */
  z-index: 100000;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  border: 3px solid red;
  pointer-events: none; 
  visibility: hidden;
}

/* temporary crap */

table {border-collapse: collapse; display: inline; }
table, th, td {border: 1px #000 solid;}
td {
  padding: 5px;
  text-align: center;
}
/* goyp */
#controls0, #controls0 > *, #controls0 > * > * {
  background-color: #0f0;
}
#controls1, #controls1 > *, #controls1 > * > * {
  background-color: #f90;
}
#controls2, #controls2 > *, #controls2 > * > * {
  background-color: #ff0;
}
#controls3, #controls3 > *, #controls > *  > * {
  background-color: #90f;
}